--- glib/gstdio.h.orig	2024-08-16 20:37:20.000000000 +0200
+++ glib/gstdio.h	2024-08-26 09:04:54.000000000 +0200
@@ -57,7 +57,8 @@
 
 #endif
 
-#if defined(G_OS_UNIX) && !defined(G_STDIO_WRAP_ON_UNIX) && !defined(__GI_SCANNER__)
+#ifndef __GI_SCANNER__
+#if defined(G_OS_UNIX) && !defined(G_STDIO_WRAP_ON_UNIX)
 
 /* Just pass on to the system functions, so there's no potential for data
  * format mismatches, especially with large file interfaces. 
@@ -174,6 +175,82 @@
 		 struct utimbuf *utb);
 
 #endif /* G_OS_UNIX */
+#else /* with --GI-SCANNER-- */
+/* Wrappers for C library functions that take pathname arguments. On
+ * Unix, the pathname is a file name as it literally is in the file
+ * system. On well-maintained systems with consistent users who know
+ * what they are doing and no exchange of files with others this would
+ * be a well-defined encoding, preferably UTF-8. On Windows, the
+ * pathname is always in UTF-8, even if that is not the on-disk
+ * encoding, and not the encoding accepted by the C library or Win32
+ * API.
+ */
+
+GLIB_AVAILABLE_IN_ALL
+int g_access    (const gchar *filename,
+         int          mode);
+
+GLIB_AVAILABLE_IN_ALL
+int g_chmod     (const gchar *filename,
+         int          mode);
+
+GLIB_AVAILABLE_IN_ALL
+int g_open      (const gchar *filename,
+                 int          flags,
+                 int          mode);
+
+GLIB_AVAILABLE_IN_ALL
+int g_creat     (const gchar *filename,
+                 int          mode);
+
+GLIB_AVAILABLE_IN_ALL
+int g_rename    (const gchar *oldfilename,
+                 const gchar *newfilename);
+
+GLIB_AVAILABLE_IN_ALL
+int g_mkdir     (const gchar *filename,
+                 int          mode);
+
+GLIB_AVAILABLE_IN_ALL
+int g_chdir     (const gchar *path);
+
+GLIB_AVAILABLE_IN_ALL
+int g_stat      (const gchar *filename,
+                 GStatBuf    *buf);
+
+GLIB_AVAILABLE_IN_ALL
+int g_lstat     (const gchar *filename,
+                 GStatBuf    *buf);
+
+GLIB_AVAILABLE_IN_ALL
+int g_unlink    (const gchar *filename);
+
+GLIB_AVAILABLE_IN_ALL
+int g_remove    (const gchar *filename);
+
+GLIB_AVAILABLE_IN_ALL
+int g_rmdir     (const gchar *filename);
+
+GLIB_AVAILABLE_IN_ALL
+FILE *g_fopen   (const gchar *filename,
+                 const gchar *mode);
+
+GLIB_AVAILABLE_IN_ALL
+FILE *g_freopen (const gchar *filename,
+                 const gchar *mode,
+                 FILE        *stream);
+
+GLIB_AVAILABLE_IN_2_64
+gint g_fsync    (gint fd);
+
+struct utimbuf;            /* Don't need the real definition of struct utimbuf when just
+                 * including this header.
+                 */
+
+GLIB_AVAILABLE_IN_ALL
+int g_utime     (const gchar    *filename,
+         struct utimbuf *utb);
+#endif /* --GI-SCANNER-- DEFINED */
 
 GLIB_AVAILABLE_IN_2_36
 gboolean g_close (gint       fd,
