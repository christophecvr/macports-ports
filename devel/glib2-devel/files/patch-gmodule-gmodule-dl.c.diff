--- gmodule/gmodule-dl.c.orig	2024-08-16 20:37:20.000000000 +0200
+++ gmodule/gmodule-dl.c	2024-08-23 08:10:02.000000000 +0200
@@ -166,7 +166,7 @@
    * always returns 'undefined symbol'. Only if RTLD_DEFAULT or 
    * NULL is given, dlsym returns an appropriate pointer.
    */
-  lock_dlerror ();
+ /* lock_dlerror ();
 #if defined(__ANDROID__) || defined(__NetBSD__) || defined(__FreeBSD__)
   handle = RTLD_DEFAULT;
 #else
@@ -175,7 +175,19 @@
   if (!handle)
     g_module_set_error (fetch_dlerror (TRUE));
   unlock_dlerror ();
-  
+   * Intentionally not dlclose()ing because it is safer to leave the library
+   * loaded in memory than to close it and possibly leave dangling pointers
+   * to things like atexit handlers, atfork handlers, blocks etc.
+   *
+   * See https://trac.macports.org/ticket/45309 for an example from when
+   * a library used by a module added a new dependency which had an
+   * initializer which added a child atfork handler. The result is that
+   * after closing the module, the system had a dangling pointer for the
+   * atfork handler which would at best crash on the child side of fork()
+   * and at worst lead to arbitrary code execution of whatever happened to be
+   * at that location in memory at a later time in the process.
+   */
+
   return handle;
 }
 
