--- gedit/meson.build.orig	2021-03-27 18:41:09.000000000 +0100
+++ gedit/meson.build	2024-09-30 12:36:45.000000000 +0200
@@ -69,6 +69,7 @@
   'gedit-print-job.h',
   'gedit-print-preview.h',
   'gedit-recent.h',
+  'gedit-resent-osx.h',
   'gedit-replace-dialog.h',
   'gedit-settings.h',
   'gedit-status-menu-button.h',
@@ -129,6 +130,7 @@
 if host_machine.system() == 'darwin'
   libgedit_private_sources += [
     'gedit-app-osx.m',
+    'gedit-recent-osx.c',
   ]
   libgedit_c_args += [
     '-DOS_OSX=1',
@@ -266,5 +268,5 @@
   c_args: gedit_c_args,
   install: true,
   install_rpath: get_option('prefix') / get_option('libdir') / 'gedit',
-  gui_app: true,
+  win_subsystem: 'windows',
 )
--- gedit/gedit-recent.c.orig	2021-03-27 18:41:09.000000000 +0100
+++ gedit/gedit-recent.c	2024-09-30 12:59:09.000000000 +0200
@@ -156,169 +156,4 @@
 	}
 }
 
-/* The GeditRecentConfiguration struct is allocated and owned by the caller */
-void
-gedit_recent_configuration_init_default (GeditRecentConfiguration *config)
-{
-	config->manager = gtk_recent_manager_get_default ();
-
-	if (config->filter != NULL)
-	{
-		g_object_unref (config->filter);
-	}
-
-	config->filter = gtk_recent_filter_new ();
-	gtk_recent_filter_add_application (config->filter, g_get_application_name ());
-	gtk_recent_filter_add_mime_type (config->filter, "text/plain");
-	g_object_ref_sink (config->filter);
-
-	config->limit = 5;
-	config->show_not_found = TRUE;
-	config->show_private = FALSE;
-	config->local_only = FALSE;
-
-	config->substring_filter = NULL;
-}
-
-/* The GeditRecentConfiguration struct is owned and destroyed by the caller */
-void
-gedit_recent_configuration_destroy (GeditRecentConfiguration *config)
-{
-	g_clear_object (&config->filter);
-	config->manager = NULL;
-
-	g_clear_pointer (&config->substring_filter, (GDestroyNotify)g_free);
-}
-
-GList *
-gedit_recent_get_items (GeditRecentConfiguration *config)
-{
-	GtkRecentFilterFlags needed;
-	GList *items;
-	GList *retitems = NULL;
-	gint length;
-	char *substring_filter = NULL;
-
-	if (config->limit == 0)
-	{
-		return NULL;
-	}
-
-	items = gtk_recent_manager_get_items (config->manager);
-
-	if (!items)
-	{
-		return NULL;
-	}
-
-	needed = gtk_recent_filter_get_needed (config->filter);
-	if (config->substring_filter && *config->substring_filter != '\0')
-	{
-		gchar *filter_normalized;
-
-		filter_normalized = g_utf8_normalize (config->substring_filter, -1, G_NORMALIZE_ALL);
-		substring_filter = g_utf8_casefold (filter_normalized, -1);
-		g_free (filter_normalized);
-	}
-
-	while (items)
-	{
-		GtkRecentInfo *info;
-		GtkRecentFilterInfo filter_info;
-		gboolean is_filtered;
-
-		info = items->data;
-		is_filtered = FALSE;
-
-		if (config->local_only && !gtk_recent_info_is_local (info))
-		{
-			is_filtered = TRUE;
-		}
-		else if (!config->show_private && gtk_recent_info_get_private_hint (info))
-		{
-			is_filtered = TRUE;
-		}
-		else if (!config->show_not_found && !gtk_recent_info_exists (info))
-		{
-			is_filtered = TRUE;
-		}
-		else
-		{
-			if (substring_filter)
-			{
-				gchar *uri_normalized;
-				gchar *uri_casefolded;
-
-				uri_normalized = g_utf8_normalize (gtk_recent_info_get_uri_display (info), -1, G_NORMALIZE_ALL);
-				uri_casefolded = g_utf8_casefold (uri_normalized, -1);
-				g_free (uri_normalized);
-
-				if (strstr (uri_casefolded, substring_filter) == NULL)
-				{
-					is_filtered = TRUE;
-				}
-
-				g_free (uri_casefolded);
-			}
-
-			if (!is_filtered)
-			{
-				populate_filter_info (info, &filter_info, needed);
-				is_filtered = !gtk_recent_filter_filter (config->filter, &filter_info);
-
-				/* these we own */
-				if (filter_info.applications)
-				{
-					g_strfreev ((gchar **) filter_info.applications);
-				}
-
-				if (filter_info.groups)
-				{
-					g_strfreev ((gchar **) filter_info.groups);
-				}
-			}
-		}
-
-		if (!is_filtered)
-		{
-			retitems = g_list_prepend (retitems, info);
-		}
-		else
-		{
-			gtk_recent_info_unref (info);
-		}
-
-		items = g_list_delete_link (items, items);
-	}
-
-	g_free (substring_filter);
-
-	if (!retitems)
-	{
-		return NULL;
-	}
-
-	retitems = g_list_sort_with_data (retitems, (GCompareDataFunc) sort_recent_items_mru, NULL);
-	length = g_list_length (retitems);
-
-	if ((config->limit != -1) && (length > config->limit))
-	{
-		GList *clamp, *l;
-
-		clamp = g_list_nth (retitems, config->limit - 1);
-
-		if (!clamp)
-		{
-			return retitems;
-		}
-
-		l = clamp->next;
-		clamp->next = NULL;
-
-		g_list_free_full (l, (GDestroyNotify) gtk_recent_info_unref);
-	}
-
-	return retitems;
-}
-
 /* ex:set ts=8 noet: */
--- gedit/gedit-recent.h.orig	2021-03-27 18:41:09.000000000 +0100
+++ gedit/gedit-recent.h	2024-09-30 13:00:34.000000000 +0200
@@ -45,10 +45,6 @@
 
 void		 gedit_recent_remove_if_local		 (GFile                    *location);
 
-void		 gedit_recent_configuration_init_default (GeditRecentConfiguration *config);
-void		 gedit_recent_configuration_destroy	 (GeditRecentConfiguration *config);
-GList		*gedit_recent_get_items			 (GeditRecentConfiguration *config);
-
 G_END_DECLS
 
 #endif  /* GEDIT_RECENT_H  */
